doctype html
html
  head
    title #{title}
    meta(name='viewport', content='width=device-width, initial-scale=1')
    meta(charset='UTF-8')

    link(rel='stylesheet', href='../stylesheets/style.css')
    link(rel='stylesheet', href='../stylesheets/jstyle.css')

    script(type='text/javascript').
      function SetDate() { //sets date on form to current date
        var date = new Date();
        var day = date.getDate();
        var month = date.getMonth() + 1;
        var year = date.getFullYear();
        if (month < 10) month = "0" + month;
        if (day < 10) day = "0" + day;
        var today = year + "-" + month + "-" + day;
        document.getElementById('formDate').value = today;
      }

  body(onload='SetDate();')
    include partials/header.pug
    #container
      form#applicationForm.main.center.depth(action='/apply/formPost', method='POST', name='application')
        img.center.w-10.stackable-s(src='../images/logo.png')
        h3.text-center Application and Notice For Membership in Local Union No.
        input.w-10.center.stackable-xs.text-center(type='number', min='1', placeholder='Union Number', name='postBodyArray', required, value='89')
        h4.text-center.stackable-m Affiliated With the International Brotherhood of Teamsters
        input#formDate(type='date', name='postBodyArray', required)
        h3.text-center Name & Occupation
        input.formItem.w-33.stackable-xs(type='text', placeholder='Last Name', name='postBodyArray', required)
        |
        |
        input.formItem.w-33.stackable-xs(type='text', placeholder='First Name', name='postBodyArray', required)
        |
        |
        input.formItem.w-33.stackable-s(type='text', placeholder='Middle Initial', name='postBodyArray', required)
        input.formItem.w-100.stackable-s(type='text', placeholder='Occupation', name='postBodyArray', required)

        h3.text-center Contact Information
        input.formItem.w-75(type='text', placeholder='Street Address', name='postBodyArray', required)
        |
        |
        input#phoneNumber1.formItem.w-25.stackable-s(type='text', placeholder='Phone Number', name='postBodyArray', required)
        input.formItem.w-33.stackable-xs(type='text', placeholder='City', name='postBodyArray', required, value='Louisville')
        |
        |
        select(name='postBodyArray', form='applicationForm', required)
          option(value='AL') Alabama
          option(value='AK') Alaska
          option(value='AZ') Arizona
          option(value='AR') Arkansas
          option(value='CA') California
          option(value='CO') Colorado
          option(value='CT') Connecticut
          option(value='DE') Delaware
          option(value='DC') District Of Columbia
          option(value='FL') Florida
          option(value='GA') Georgia
          option(value='HI') Hawaii
          option(value='ID') Idaho
          option(value='IL') Illinois
          option(value='IN') Indiana
          option(value='IA') Iowa
          option(value='KS') Kansas
          option(value='KY', selected) Kentucky
          option(value='LA') Louisiana
          option(value='ME') Maine
          option(value='MD') Maryland
          option(value='MA') Massachusetts
          option(value='MI') Michigan
          option(value='MN') Minnesota
          option(value='MS') Mississippi
          option(value='MO') Missouri
          option(value='MT') Montana
          option(value='NE') Nebraska
          option(value='NV') Nevada
          option(value='NH') New Hampshire
          option(value='NJ') New Jersey
          option(value='NM') New Mexico
          option(value='NY') New York
          option(value='NC') North Carolina
          option(value='ND') North Dakota
          option(value='OH') Ohio
          option(value='OK') Oklahoma
          option(value='OR') Oregon
          option(value='PA') Pennsylvania
          option(value='RI') Rhode Island
          option(value='SC') South Carolina
          option(value='SD') South Dakota
          option(value='TN') Tennessee
          option(value='TX') Texas
          option(value='UT') Utah
          option(value='VT') Vermont
          option(value='VA') Virginia
          option(value='WA') Washington
          option(value='WV') West Virginia
          option(value='WI') Wisconsin
          option(value='WY') Wyoming
        |
        |
        input.formItem.w-33.stackable-s(type='text', minlength='5', maxlength='5', placeholder='Zip Code', name='postBodyArray', required)
        h3.text-center Employer
        input.formItem.w-75.stackable-xs(type='text', placeholder='Employer', name='postBodyArray', required)
        |
        |
        input.formItem.w-25.stackable-xs(type='date', placeholder='Employment Date (MM-DD-YYYY)', name='postBodyArray', required)
        input.formItem.w-75(type='text', placeholder='Employer Street Address', name='postBodyArray', required)
        |
        |
        input#phoneNumber2.formItem.w-25.stackable-s(type='text', placeholder='Employer Phone Number', name='postBodyArray', required)
        input.formItem.w-33.stackable-xs(type='text', placeholder='Employer City', name='postBodyArray', required, value='Louisville')
        |
        |
        select(name='postBodyArray', form='applicationForm', required)
          option(value='AL') Alabama
          option(value='AK') Alaska
          option(value='AZ') Arizona
          option(value='AR') Arkansas
          option(value='CA') California
          option(value='CO') Colorado
          option(value='CT') Connecticut
          option(value='DE') Delaware
          option(value='DC') District Of Columbia
          option(value='FL') Florida
          option(value='GA') Georgia
          option(value='HI') Hawaii
          option(value='ID') Idaho
          option(value='IL') Illinois
          option(value='IN') Indiana
          option(value='IA') Iowa
          option(value='KS') Kansas
          option(value='KY', selected) Kentucky
          option(value='LA') Louisiana
          option(value='ME') Maine
          option(value='MD') Maryland
          option(value='MA') Massachusetts
          option(value='MI') Michigan
          option(value='MN') Minnesota
          option(value='MS') Mississippi
          option(value='MO') Missouri
          option(value='MT') Montana
          option(value='NE') Nebraska
          option(value='NV') Nevada
          option(value='NH') New Hampshire
          option(value='NJ') New Jersey
          option(value='NM') New Mexico
          option(value='NY') New York
          option(value='NC') North Carolina
          option(value='ND') North Dakota
          option(value='OH') Ohio
          option(value='OK') Oklahoma
          option(value='OR') Oregon
          option(value='PA') Pennsylvania
          option(value='RI') Rhode Island
          option(value='SC') South Carolina
          option(value='SD') South Dakota
          option(value='TN') Tennessee
          option(value='TX') Texas
          option(value='UT') Utah
          option(value='VT') Vermont
          option(value='VA') Virginia
          option(value='WA') Washington
          option(value='WV') West Virginia
          option(value='WI') Wisconsin
          option(value='WY') Wyoming
        |
        |
        input.formItem.w-33.stackable-s(type='text', minlength=5, maxlength=5, placeholder='Employer Zip Code', name='postBodyArray', required)
        h3.text-center Fee
        input.formItem.w-25.stackable-xs(type='number', placeholder='Initiation Fee (USD)', name='postBodyArray', required)
        |
        |
        input.formItem.w-75.stackable-s(type='text', placeholder='Paid To...', name='postBodyArray', required)
        h3.text-center Personal Information
        .scan-fields.formItem.w-50.stackable-s
          label(for='d-o-b') Date of Birth
          |
          |
          input#d-o-b(type='date', placeholder='Date of Birth', name='postBodyArray', required)
        .scan-fields.formItem.w-50.stackable-s
          label(for='s-s-n') Social Security Number
          |
          |
          input#s-s-n(type='text', minlength=11, maxlength=11, placeholder='###-##-####', name='postBodyArray', required)

        label(for='previous') Previous member of the local Teamster Union?
        |
        |
        select(id='previous' name='postBodyArray', form='applicationForm', required)
          option(value='no') No
          option(value='yes') Yes
        br
        br
        p.formItem.inline-margin-1 If so, what Local Union Number?
        input.formItem.w-10.stackable-s(type='text', placeholder='enter Union Number here, or “NA” if not applicable', name='postBodyArray', required, value='NA')
        br

        button.center Submit
    script.
      /******begin SSN AUTOFORMAT**************************************************************************************/
      document.getElementById("s-s-n").onkeyup = function () { //auto formaatting for ssn entry
        var val = this.value.replace(/\D/g, '');
        var newVal = '';
        if (val.length > 4) {
          this.value = val;
        }
        if ((val.length > 3) && (val.length < 6)) {
          newVal += val.substr(0, 3) + '-';
          val = val.substr(3);
        }
        if (val.length > 5) {
          newVal += val.substr(0, 3) + '-';
          newVal += val.substr(3, 2) + '-';
          val = val.substr(5);
        }
        newVal += val;
        this.value = newVal;
      };
      /******end SSN AUTOFORMAT**************************************************************************************/

      /******begin PHONE AUTOFORMAT**************************************************************************************/
      // APPLICANT PHONENUMBER FIELD HAS ID of 'phoneNumber1' -- Format the phone number as the user types it
      document.getElementById('phoneNumber1').addEventListener('keyup', function (evt) {
        var phoneNumber1 = document.getElementById('phoneNumber1');
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        phoneNumber1.value = phoneFormat(phoneNumber1.value);
      });
      // We need to manually format the phone number on page load
      document.getElementById('phoneNumber1').value = phoneFormat(document.getElementById('phoneNumber1').value);


      // EMPLOYER PHONENUMBER FIELD HAS ID of 'phoneNumber2' -- Format the phone number as the user types it
      document.getElementById('phoneNumber2').addEventListener('keyup', function (evt) {
        var phoneNumber2 = document.getElementById('phoneNumber2');
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        phoneNumber2.value = phoneFormat(phoneNumber2.value);
      });
      // We need to manually format the phone number on page load
      document.getElementById('phoneNumber2').value = phoneFormat(document.getElementById('phoneNumber1').value);


      // A function to determine if the pressed key is an integer
      function numberPressed(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57) && (charCode < 36 || charCode > 40)) {
          return false;
        }
        return true;
      }
      // A function to format text to look like a phone number
      function phoneFormat(input) {
        // Strip all characters from the input except digits
        input = input.replace(/\D/g, '');
        // Trim the remaining input to ten characters, to preserve phone number format
        input = input.substring(0, 10);
        // Based upon the length of the string, we add formatting as necessary
        var size = input.length;
        if (size == 0) {
          input = input;
        } else if (size < 4) {
          input = '(' + input;
        } else if (size < 7) {
          input = '(' + input.substring(0, 3) + ') ' + input.substring(3, 6);
        } else {
          input = '(' + input.substring(0, 3) + ') ' + input.substring(3, 6) + ' - ' + input.substring(6, 10);
        }
        return input;
      }
      /******end PHONE AUTOFORMAT**************************************************************************************/
